# kubectl create secret docker-registry registry --docker-server=registry.m3y3r.de --docker-username=guest --docker-password=DOCKER_PASSWORD

apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: artifactory-credential-provider-installer
  labels:
    app: artifactory-credential-provider
spec:
  selector:
    matchLabels:
      app: artifactory-credential-provider
  template:
    metadata:
      labels:
        app: artifactory-credential-provider
    spec:
      hostPID: true
      imagePullSecrets:
        - name: registry
      containers:
      - name: installer
        image: registry.m3y3r.de/artifactory-credential-provider:latest
        imagePullPolicy: Always
        securityContext:
          privileged: true # make us root
        volumeMounts:
        - name: host-root
          mountPath: /host
        - name: config
          mountPath: /cfg
      volumes:
      - name: host-root
        hostPath:
          path: /
          type: Directory
      - name: config
        configMap:
          name: artifactory-credential-provider

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: artifactory-credential-provider
data:
  credential-provider.yaml: |
    # https://kubernetes.io/docs/reference/config-api/kubelet-config.v1/
    apiVersion: kubelet.config.k8s.io/v1
    kind: CredentialProviderConfig
    providers:
    - name: artifactory-credential-provider
      matchImages:
        - "your-jfrog-instance.jfrog.io/docker-repo/"
      defaultCacheDuration: "10m"
      apiVersion: credentialprovider.kubelet.k8s.io/v1
      env:
        - name: ID_TOKEN_PROVIDER
          value: "GCP-GCE"
        - name: ID_TOKEN_TARGET_AUDIENCE
          value: "artifactory-idp"
        - name: ARTIFACTORY_URL
          value: "https://your-jfrog-instance.jfrog.io"
        - name: ARTIFACTORY_OIDC_PROVIDER
          value: "no-idea"
        - name: ARTIFACTORY_PROJECT_KEY
          value: "project-key"
